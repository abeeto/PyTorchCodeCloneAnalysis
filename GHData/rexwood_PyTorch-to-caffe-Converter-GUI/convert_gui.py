# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'convert_demo3.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtCore import pyqtSignal
from PyQt5.QtWidgets import QApplication
from PyQt5.QtGui import QTextCursor
from PyQt5.QtWidgets import QFileDialog, QMainWindow, QMessageBox
import verify_function
import convert_function


class Stream(QtCore.QObject):
    """Redirects console output to text widget."""
    newText = pyqtSignal(str)

    def write(self, text):
        self.newText.emit(str(text))


class Ui_Converter(QMainWindow):
    def __init__(self):
        super().__init__()

        # Custom output stream.
        sys.stdout = Stream(newText=self.onUpdateText)

    def setupUi(self, Converter):
        Converter.setObjectName("Converter")
        Converter.resize(1027, 565)
        self.centralwidget = QtWidgets.QWidget(Converter)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(310, 0, 350, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.save_path_text = QtWidgets.QLineEdit(self.centralwidget)
        self.save_path_text.setGeometry(QtCore.QRect(10, 300, 351, 31))
        self.save_path_text.setObjectName("save_path_text")
        self.b1 = QtWidgets.QPushButton(self.centralwidget)
        self.b1.setGeometry(QtCore.QRect(370, 260, 91, 31))
        self.b1.setObjectName("b1")
        self.b2 = QtWidgets.QPushButton(self.centralwidget)
        self.b2.setGeometry(QtCore.QRect(370, 300, 92, 31))
        self.b2.setObjectName("b2")
        self.b3 = QtWidgets.QPushButton(self.centralwidget)
        self.b3.setGeometry(QtCore.QRect(360, 390, 171, 111))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.b3.setFont(font)
        self.b3.setObjectName("b3")
        self.open_path_text = QtWidgets.QLineEdit(self.centralwidget)
        self.open_path_text.setGeometry(QtCore.QRect(10, 260, 351, 31))
        self.open_path_text.setObjectName("open_path_text")
        self.l1 = QtWidgets.QLabel(self.centralwidget)
        self.l1.setGeometry(QtCore.QRect(140, 350, 111, 16))
        self.l1.setObjectName("l1")
        self.lineEdit_1 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_1.setGeometry(QtCore.QRect(170, 380, 113, 21))
        self.lineEdit_1.setObjectName("lineEdit_1")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(170, 410, 113, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(170, 440, 113, 21))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(170, 470, 113, 21))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.l2 = QtWidgets.QLabel(self.centralwidget)
        self.l2.setGeometry(QtCore.QRect(60, 380, 91, 21))
        self.l2.setObjectName("l2")
        self.l3 = QtWidgets.QLabel(self.centralwidget)
        self.l3.setGeometry(QtCore.QRect(60, 410, 72, 15))
        self.l3.setObjectName("l3")
        self.l4 = QtWidgets.QLabel(self.centralwidget)
        self.l4.setGeometry(QtCore.QRect(60, 440, 72, 15))
        self.l4.setObjectName("l4")
        self.l5 = QtWidgets.QLabel(self.centralwidget)
        self.l5.setGeometry(QtCore.QRect(60, 470, 72, 15))
        self.l5.setObjectName("l5")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(560, 90, 431, 361))
        self.textEdit.setObjectName("textEdit")
        self.l2_2 = QtWidgets.QLabel(self.centralwidget)
        self.l2_2.setGeometry(QtCore.QRect(560, 450, 911, 51))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(16)
        self.l2_2.setFont(font)
        self.l2_2.setObjectName("l2_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(140, 70, 91, 16))
        self.label_2.setObjectName("label_2")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(240, 80, 118, 3))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(10, 80, 118, 3))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(10, 100, 481, 81))
        self.textBrowser.setObjectName("textBrowser")
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setGeometry(QtCore.QRect(10, 360, 118, 3))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setGeometry(QtCore.QRect(230, 360, 118, 3))
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(150, 190, 72, 15))
        self.label_3.setObjectName("label_3")
        self.line_6 = QtWidgets.QFrame(self.centralwidget)
        self.line_6.setGeometry(QtCore.QRect(20, 200, 118, 3))
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.line_7 = QtWidgets.QFrame(self.centralwidget)
        self.line_7.setGeometry(QtCore.QRect(210, 200, 118, 3))
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.open_path_text_0 = QtWidgets.QLineEdit(self.centralwidget)
        self.open_path_text_0.setGeometry(QtCore.QRect(10, 220, 351, 31))
        self.open_path_text_0.setObjectName("open_path_text_0")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(730, 70, 151, 16))
        self.label_4.setObjectName("label_4")
        self.b0 = QtWidgets.QPushButton(self.centralwidget)
        self.b0.setGeometry(QtCore.QRect(370, 220, 91, 31))
        self.b0.setObjectName("b0")
        self.line_8 = QtWidgets.QFrame(self.centralwidget)
        self.line_8.setGeometry(QtCore.QRect(560, 70, 161, 20))
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.line_9 = QtWidgets.QFrame(self.centralwidget)
        self.line_9.setGeometry(QtCore.QRect(790, 70, 201, 16))
        self.line_9.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(930, 30, 72, 15))
        self.label_5.setObjectName("label_5")
        Converter.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Converter)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1027, 26))
        self.menubar.setObjectName("menubar")
        Converter.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Converter)
        self.statusbar.setObjectName("statusbar")
        Converter.setStatusBar(self.statusbar)

        self.retranslateUi(Converter)
        QtCore.QMetaObject.connectSlotsByName(Converter)

        self.b0.clicked.connect(self.open_model)
        self.b1.clicked.connect(self.open_event)
        self.b2.clicked.connect(self.save_event)
        self.b3.clicked.connect(self.convert_event)

    def retranslateUi(self, Converter):
        _translate = QtCore.QCoreApplication.translate
        Converter.setWindowTitle(_translate("Converter", "MainWindow"))
        self.label.setText(_translate("Converter", "PyTorch to Caffe converter"))
        self.save_path_text.setText(_translate("Converter", "Save path"))
        self.b1.setText(_translate("Converter", "browse"))
        self.b2.setText(_translate("Converter", "browse"))
        self.b3.setText(_translate("Converter", "Convert"))
        self.open_path_text.setText(_translate("Converter", "Input model path(.pth)"))
        self.l1.setText(_translate("Converter", "Input info:"))
        self.l2.setText(_translate("Converter", "Batch_size"))
        self.l3.setText(_translate("Converter", "#Channel"))
        self.l4.setText(_translate("Converter", "Width"))
        self.l5.setText(_translate("Converter", "Height"))
        self.textEdit.setHtml(_translate("Converter",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "</style></head><body style=\" font-family:\'SimSun\'; font-size:9.07563pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9.07563pt;\"><br /></p></body></html>"))
        self.l2_2.setText(_translate("Converter", "convert error:"))
        self.label_2.setText(_translate("Converter", "user guide"))
        self.textBrowser.setHtml(_translate("Converter",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'SimSun\'; font-size:9.07563pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">1、将模型定义所在的.py文件导入（注意导入的文件名称为保存模型时的文件名称）</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">2、将模型的.pth文件导入（注意保存的是整个模型）<span></p>\n"
                                            "<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">3、选择转换后的保存位置</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">4、设置好输入信息</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">5、点击Convert按钮开始转换</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">6、浏览右侧详细的转换过程</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9.07563pt;\">7、convert error验证转换是否成功</span></p></body></html>"))
        self.label_3.setText(_translate("Converter", "setting"))
        self.open_path_text_0.setText(_translate("Converter", "Input model definition(.py)"))
        self.label_4.setText(_translate("Converter", "details"))
        self.b0.setText(_translate("Converter", "browse"))
        self.label_5.setText(_translate("Converter", "By RexW"))

    def onUpdateText(self, text):
        """Write console output to text widget."""
        cursor = self.textEdit.textCursor()
        cursor.movePosition(QTextCursor.End)
        cursor.insertText(text)
        self.textEdit.setTextCursor(cursor)
        self.textEdit.ensureCursorVisible()

    def closeEvent(self, event):
        """Shuts down application on close."""
        # Return stdout to defaults.
        sys.stdout = sys.__stdout__
        super().closeEvent(event)

    def show_popup(self):
        msg = QMessageBox()
        msg.setWindowTitle("Information")
        msg.setText("Complete transformation!")
        msg.setIcon(QMessageBox.Information)
        X = msg.exec_()

    def show_popup2(self):
        msg = QMessageBox()
        msg.setWindowTitle("Warning")
        msg.setText("Transformation failed!")
        msg.setIcon(QMessageBox.Warning)
        X = msg.exec_()

    def show_popup3(self):
        msg = QMessageBox()
        msg.setWindowTitle("Failing")
        msg.setText("Invalid iuput! Please try again")
        msg.setIcon(QMessageBox.Warning)
        X = msg.exec_()

    def open_event(self):
        _translate = QtCore.QCoreApplication.translate
        directory1 = QFileDialog.getOpenFileName(None, "选择文件", 'H:/')
        path = directory1[0]
        # print(path)
        self.open_path_text.setText(_translate("Converter", path))

    def save_event(self):
        _translate = QtCore.QCoreApplication.translate
        directory2 = QFileDialog.getExistingDirectory(None, "文件保存", 'H:/')
        path = directory2 + '/'
        # print(path)
        self.save_path_text.setText(_translate("Converter", path))

    def open_model(self):
        _translate = QtCore.QCoreApplication.translate
        directory0 = QFileDialog.getOpenFileName(None, "选择文件", 'H:/')
        path = directory0[0]
        # print(path)
        self.open_path_text_0.setText(_translate("Converter", path))

    def convert_event(self):

        self.b3.setEnabled(False)
        self.b3.setText("Converting...")
        QtWidgets.QApplication.processEvents()
        model_define_path = self.open_path_text_0.text()
        input_path = self.open_path_text.text()
        save_path = self.save_path_text.text()
        batch_size = int(self.lineEdit_1.text())
        channel = int(self.lineEdit_2.text())
        height = int(self.lineEdit_3.text())
        width = int(self.lineEdit_4.text())
        print(model_define_path)
        print(input_path)
        print(save_path)
        print(batch_size)
        print(channel)
        print(height)
        print(width)
        name, signal = convert_function.convert(model_define_path, input_path, save_path, batch_size, channel,
                                                height,
                                                width)
        print(signal)
        if signal == True:
            self.b3.setText("Verifying...")
            QtWidgets.QApplication.processEvents()
            error = verify_function.verify(name, model_define_path, input_path, save_path, batch_size, channel,
                                           height,
                                           width)
            # print(error)
            self.l2_2.setText("Convert error: {}%".format(error))
            self.show_popup()
        else:
            self.l2_2.setText("Convert error: --%")
            self.show_popup2()
        self.b3.setEnabled(True)
        self.b3.setText("Convert")
        QtWidgets.QApplication.processEvents()

        '''
        except:
            self.show_popup3()
            self.b3.setEnabled(True)
            self.b3.setText("Convert")
            _translate = QtCore.QCoreApplication.translate
            self.save_path_text.setText(_translate("Converter", "Save path"))
            self.open_path_text_0.setText(_translate("Converter", "Input model definition(.py)"))
            self.open_path_text.setText(_translate("Converter", "Input model path(.pth)"))
            self.lineEdit_1.setText(_translate("Converter", ""))
            self.lineEdit_2.setText(_translate("Converter", ""))
            self.lineEdit_3.setText(_translate("Converter", ""))
            self.lineEdit_4.setText(_translate("Converter", ""))
            QtWidgets.QApplication.processEvents()

        '''



if __name__ == "__main__":
    app = QApplication(sys.argv)
    Converter = QtWidgets.QMainWindow()
    ui = Ui_Converter()
    ui.setupUi(Converter)
    Converter.show()
    sys.exit(app.exec_())
