alex_cmd = ['python', 'image_classifier.py', '--model', 'alexnet', '--use_cuda', 'True', '--max_epochs', '5']
squeezenetv1_0_cmd = ['python', 'image_classifier.py', '--model', 'squeezenet1_0', '--use_cuda', 'True', '--max_epochs', '5' ]
googlenet_cmd = ['python', 'image_classifier.py', '--model', 'googlenet', '--use_cuda', 'True', '--max_epochs', '5' ]
inceptionv3_cmd = ['python', 'image_classifier.py', '--model', 'inception_v3', '--use_cuda', 'True', '--max_epochs', '5' ]
mobilenetv2_cmd = ['python', 'image_classifier.py', '--model', 'mobilenet', '--use_cuda', 'True', '--max_epochs', '5', ]
mobilenetv2_large_cmd = ['python', 'image_classifier.py', '--model', 'mobilenet_large', '--use_cuda', 'True', '--max_epochs', '5' ]
vgg11_cmd = ['python', 'image_classifier.py', '--model', 'vgg11', '--use_cuda', 'True', '--max_epochs', '5']
vgg11bn_cmd = ['python', 'image_classifier.py', '--model', 'vgg11_bn', '--use_cuda', 'True', '--max_epochs', '5']
vgg19_cmd = ['python', 'image_classifier.py', '--model', 'vgg19', '--use_cuda', 'True', '--max_epochs', '10']
resnet18_cmd = ['python', 'image_classifier.py', '--model', 'resnet18', '--use_cuda', 'True', '--max_epochs', '5' ]
resnext29_2x64_cmd = ['python', 'image_classifier.py', '--model', 'resnext29_2x64d', '--use_cuda', 'True', '--max_epochs', '5' ]
resnext11_2x16_cmd = ['python', 'image_classifier.py', '--model', 'resnext11_2x16d', '--use_cuda', 'True', '--max_epochs', '5' ]
resnext11_2x64_cmd = ['python', 'image_classifier.py', '--model', 'resnext11_2x64d', '--use_cuda', 'True', '--max_epochs', '5' ]
resnet34_cmd = ['python', 'image_classifier.py', '--model', 'resnet34', '--use_cuda', 'True', '--max_epochs', '5' ]
resnet50_cmd = ['python', 'image_classifier.py', '--model', 'resnet50', '--use_cuda', 'True', '--max_epochs', '5' ]
shufflenet_2_0_cmd = ['python', 'image_classifier.py', '--model', 'shufflenetv2_2_0', '--use_cuda', 'True', '--max_epochs', '5' ]
shufflenet_1_0_cmd = ['python', 'image_classifier.py', '--model', 'shufflenetv2_1_0', '--use_cuda', 'True', '--max_epochs', '5' ]
shufflenet_0_5_cmd = ['python', 'image_classifier.py', '--model', 'shufflenetv2_0_5', '--use_cuda', 'True', '--max_epochs', '5' ]
dense121_cmd = ['python', 'image_classifier.py', '--model', 'densenet121', '--use_cuda', 'True', '--max_epochs', '5' ]
dense161_cmd = ['python', 'image_classifier.py', '--model', 'densenet161', '--use_cuda', 'True', '--max_epochs', '5' ]
dense169_cmd = ['python', 'image_classifier.py', '--model', 'densenet169', '--use_cuda', 'True', '--max_epochs', '5' ]
eff_b0_cmd = ['python', 'image_classifier.py', '--model', 'efficientnetb0', '--use_cuda', 'True', '--max_epochs', '5' ]
eff_b1_cmd = ['python', 'image_classifier.py', '--model', 'efficientnetb1', '--use_cuda', 'True', '--max_epochs', '5' ]
eff_b2_cmd = ['python', 'image_classifier.py', '--model', 'efficientnetb2', '--use_cuda', 'True', '--max_epochs', '5' ]
eff_b3_cmd = ['python', 'image_classifier.py', '--model', 'efficientnetb3', '--use_cuda', 'True', '--max_epochs', '5' ]
eff_b4_cmd = ['python', 'image_classifier.py', '--model', 'efficientnetb4', '--use_cuda', 'True', '--max_epochs', '5' ]
pnasb_cmd = ['python', 'image_classifier.py', '--model', 'pnasb', '--use_cuda', 'True', '--max_epochs', '5' ]
mnasnet0_5_cmd = ['python', 'image_classifier.py', '--model', 'mnasnet0_5', '--use_cuda', 'True', '--max_epochs', '5' ]
mnasnet1_0_cmd = ['python', 'image_classifier.py', '--model', 'mnasnet1_0', '--use_cuda', 'True', '--max_epochs', '5' ]
mnasnet1_3_cmd = ['python', 'image_classifier.py', '--model', 'mnasnet1_3', '--use_cuda', 'True', '--max_epochs', '10' ]
dpn92_cmd = ['python', 'image_classifier.py', '--model', 'dpn92', '--use_cuda', 'True', '--max_epochs', '5' ]
dpn26_cmd = ['python', 'image_classifier.py', '--model', 'dpn26', '--use_cuda', 'True', '--max_epochs', '5' ]
dpn26small_cmd = ['python', 'image_classifier.py', '--model', 'dpn26_small', '--use_cuda', 'True', '--max_epochs', '5' ]
pyramidnet_48_110_cmd = ['python', 'image_classifier.py', '--model', 'pyramidnet_48_110', '--use_cuda', 'True', '--max_epochs', '5' ]
pyramidnet_84_110_cmd = ['python', 'image_classifier.py', '--model', 'pyramidnet_84_110', '--use_cuda', 'True', '--max_epochs', '5' ]
pyramidnet_84_66_cmd = ['python', 'image_classifier.py', '--model', 'pyramidnet_84_66', '--use_cuda', 'True', '--max_epochs', '5' ]
pyramidnet_270_110_bottleneck_cmd = ['python', 'image_classifier.py', '--model', 'pyramidnet_270_110_bottleneck', '--use_cuda', 'True', '--max_epochs', '5' ]
resnet_wide_18_2_bottleneck_cmd = ['python', 'image_classifier.py', '--model', 'resnet_wide_18_2', '--use_cuda', 'True', '--max_epochs', '5' ]

# NOTE: NLPs
pos_cmd = ['python', 'languages.py', '--model', 'lstm', '--dataset', 'ud-eng', '--max_epochs', '6', '--task', 'pos', '--use_cuda', 'True']
# NOTE: these mt tasks aren't very good , feel free to tune, most likely because of "number of vocabs".
mt1_cmd = ['python', 'languages.py', '--embeddings_dim', '64', '--hiddens_dim', '128' ,'--model', 'lstm', '--dataset', 'nc_zhen', '--task', 'mt', '--max_vocabs', '10000','--use_cuda', 'True',  '--max_sentence_length', '250', '--max_epochs', '3']
mt2_cmd = ['python', 'languages.py', '--model', 'transformer', '--dataset', 'nc_zhen', '--embeddings_dim', '64', '--hiddens_dim', '128' '--task', 'mt', '--max_vocabs', '10000', '--use_cuda', 'True', '--max_sentence_length', '250', '--max_epochs', '3']
# NOTE: language model need some tuning too.
lm_cmd = ['python', 'languages.py', '--model', 'lstm', '--task', 'lm', '--dataset', 'wikitext', '--use_cuda', 'True', '--embeddings_dim', '64', '--max_len', '30', '--hiddens_dim', '64', '--max_vocabs', '10000',  '--bidirectional', 'True', '--max_epochs', '3']
lm_med_cmd = ['python', 'languages.py', '--model', 'lstm', '--task', 'lm', '--dataset', 'wikitext', '--use_cuda', 'True', '--embeddings_dim', '128', '--max_len', '30', '--hiddens_dim', '128', '--max_vocabs', '10000', '--bidirectional', 'True',  '--max_epochs', '3', '--num_layers', '1', '--max_sentence_length', '250']
lm_large_cmd = ['python', 'languages.py', '--model', 'lstm', '--task', 'lm', '--dataset', 'wikitext', '--use_cuda', 'True', '--embeddings_dim', '128', '--max_len', '30', '--hiddens_dim', '128', '--max_vocabs', '10000', '--drop_out', '0.2', '--bidirectional', 'True', '--max_epochs', '3', '--num_layers', '2', '--max_sentence_length', '250']
